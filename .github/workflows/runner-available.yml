name: Test windows-aarch64 availability


on:
  workflow_dispatch:
  push:

jobs:
  build:
    runs-on: ${{ 
        matrix.os == 'windows-11-arm' && matrix.os || 
        format('{0}-latest', matrix.os) 
      }}

    strategy:
      fail-fast: false
      matrix:
        os:
          - windows-11-arm
          - windows

    steps:
      - uses: actions/checkout@v4
      - uses: quansight-labs/setup-python@v5
        id: py
        with:
          python-version: |
            3.11
            3.12
            3.13
            3.14
          allow-prereleases: true
          architecture: ${{ matrix.os == 'windows' && 'x64' || 'arm64' }}

      # rust toolchain is not currently installed on windows arm64 images https://github.com/actions/partner-runner-images/issues/77
      # - if: ${{ runner.os == 'Windows' && runner.arch == 'ARM64' }}
      #   name: Setup rust
      #   id: setup-rust
      #   shell: pwsh
      #   run: |
      #     Invoke-WebRequest https://static.rust-lang.org/rustup/dist/aarch64-pc-windows-msvc/rustup-init.exe -OutFile ${{ runner.temp }}\rustup-init.exe
      #     ${{ runner.temp }}\rustup-init.exe -y
      #     Add-Content $env:GITHUB_PATH "$env:USERPROFILE\.cargo\bin"
      # rust is maybe available now
      - name: Test rust install
        run: |
          rustup toolchain list
          rustc --version

      - name: Print Runner OS
        run: | 
          echo ${{ runner.os }}
          echo ${{ runner.arch }}
          echo ${{ runner.temp }}
      
      # - name: Install miniconda.
      #   uses: conda-incubator/setup-miniconda@v3 # https://github.com/conda-incubator/setup-miniconda.
      #   with:
      #     channels: conda-forge,defaults
      #     architecture: ${{ matrix.os == 'windows' && 'x64' || 'arm64' }}
      
      - name: Print version and path
        run: | 
          echo ${{ steps.py.outputs.python-path }}
          echo ${{ steps.py.outputs.python-version }}
